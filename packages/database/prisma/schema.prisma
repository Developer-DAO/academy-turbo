generator client {
  provider = "prisma-client-js"
  output = "../client"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id               String             @id @default(cuid())
  name             String?
  address          String?            @unique
  email            String?            @unique
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime           @default(now())
  accounts         Account[]
  CompletedQuizzes CompletedQuizzes[]
}

model CompletedQuizzes {
  id        String   @id @default(cuid())
  lesson    String
  userId    String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Lessons {
  id        String   @id @default(cuid())
  lessonNumber Int   @unique @default(autoincrement())
  quizFileName      String
}
